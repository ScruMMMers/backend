import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id 'checkstyle'
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.spring.plugin)
    alias(libs.plugins.spring.plugin)
    alias(libs.plugins.spring.dependency.management)
}

group = 'com.quqee'
version = '0.0.1-SNAPSHOT'

allprojects {
    afterEvaluate { project ->
        project.plugins.withId('checkstyle') {
            checkstyle {
                showViolations = true
                maxWarnings = 500
                configFile = file('config/checkstyle/checkstyle.xml')
                ignoreFailures = true
            }
        }
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

subprojects {
    apply {
        plugin("org.jetbrains.kotlin.jvm")
    }
    group = rootProject.group
    version = rootProject.version

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation libs.spring.boot.starter
        implementation libs.spring.boot.starter.web
        implementation libs.kotlin.reflect

        testImplementation libs.spring.boot.starter.test
        testImplementation libs.junit
    }

    kotlin {
        compilerOptions {
            freeCompilerArgs.addAll '-Xjsr305=strict'
        }
    }

    test {
        jvmArgs([
                '--enable-preview',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
                '--add-opens', 'jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED'
        ])
        useJUnitPlatform()
        systemProperty "junit.jupiter.extensions.autodetection.enabled", "true"
        testLogging {
            showStandardStreams = true
            exceptionFormat TestExceptionFormat.FULL
            showExceptions true
            showCauses true
            showStackTraces true
        }
    }
}
